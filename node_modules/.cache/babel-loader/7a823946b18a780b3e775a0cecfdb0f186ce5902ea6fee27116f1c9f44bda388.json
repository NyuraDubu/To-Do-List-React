{"ast":null,"code":"var _jsxFileName = \"/home/nyu/todo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // J'importe mon fichier CSS\nimport Header from './Header'; // J'importe mon header\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Ici j'initialise ma variable pour ajouter une task \n  const addTask = () => {\n    if (newTask) {\n      setTasks([...tasks, {\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask(\"\");\n    }\n  };\n\n  // Ici je setup un input Entrer pour ajouter une nouvelle task plus rapidement\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      addTask();\n    }\n  };\n\n  // Ici je fais en sorte de pouvoir marquer une task comme completed ou non\n  const toggleTaskCompletion = index => {\n    const updatedTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n\n  // Ici j'initialise ma variable pour supprimer une task\n  const deleteTask = index => {\n    setTasks(tasks.filter((_, i) => i !== index));\n  };\n\n  // Cette variable me permet de supprimet toutes les tasks completed en une fois\n  const deleteCompletedTasks = () => {\n    const updatedTasks = tasks.filter(task => !task.completed);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Nouvelle t\\xE2che\",\n          className: \"task-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          className: \"add-button\",\n          children: \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"task-list\",\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `task-item ${task.completed ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleTaskCompletion(index),\n              className: \"complete-button\",\n              children: task.completed ? \"Annuler\" : \"Compléter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(index),\n              className: \"delete-button\",\n              children: \"Supprimer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteCompletedTasks,\n        className: \"clear-completed-button\",\n        children: \"Supprimer toutes les t\\xE2ches compl\\xE9t\\xE9es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"bioIcagx8AA9h6inwgA0NezF4sg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","addTask","text","completed","handleKeyDown","event","key","toggleTaskCompletion","index","updatedTasks","map","task","i","deleteTask","filter","_","deleteCompletedTasks","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/nyu/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // J'importe mon fichier CSS\nimport Header from './Header'; // J'importe mon header\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // Ici j'initialise ma variable pour ajouter une task \n  const addTask = () => {\n    if (newTask) {\n      setTasks([...tasks, { text: newTask, completed: false }]);\n      setNewTask(\"\");\n    }\n  };\n\n  // Ici je setup un input Entrer pour ajouter une nouvelle task plus rapidement\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      addTask();\n    }\n  };\n\n  // Ici je fais en sorte de pouvoir marquer une task comme completed ou non\n  const toggleTaskCompletion = (index) => {\n    const updatedTasks = tasks.map((task, i) => (\n      i === index ? { ...task, completed: !task.completed } : task\n    ));\n    setTasks(updatedTasks);\n  };\n\n  // Ici j'initialise ma variable pour supprimer une task\n  const deleteTask = (index) => {\n    setTasks(tasks.filter((_, i) => i !== index));\n  };\n\n  // Cette variable me permet de supprimet toutes les tasks completed en une fois\n  const deleteCompletedTasks = () => {\n    const updatedTasks = tasks.filter(task => !task.completed);\n    setTasks(updatedTasks);\n  };\n\n  return (\n  <body>\n    <div className=\"App\">\n      <Header />\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Nouvelle tâche\"\n          className=\"task-input\"\n        />\n        <button onClick={addTask} className=\"add-button\">Ajouter</button>\n      </div>\n\n      <ul className=\"task-list\">\n        {tasks.map((task, index) => (\n          <li key={index} className={`task-item ${task.completed ? 'completed' : ''}`}>\n            <span>{task.text}</span>\n            <div className=\"button-group\">\n              <button onClick={() => toggleTaskCompletion(index)} className=\"complete-button\">\n                {task.completed ? \"Annuler\" : \"Compléter\"}\n              </button>\n              <button onClick={() => deleteTask(index)} className=\"delete-button\">Supprimer</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <button onClick={deleteCompletedTasks} className=\"clear-completed-button\">Supprimer toutes les tâches complétées</button>\n    </div>\n</body>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}